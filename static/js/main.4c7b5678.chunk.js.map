{"version":3,"sources":["transitions/slideFromLeft.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactForm/ContactForm.module.css","components/Notification/Notification.module.css","components/PhoneBook/PhoneBook.module.css","transitions/slideFromRight.module.css","transitions/contacts.module.css","redux/phonebook/phonebookActionTypes.js","redux/phonebook/phonebookActions.js","redux/phonebook/phonebookReducer.js","redux/store.js","components/ContactForm/ContactForm.js","redux/phonebook/phonebookSelectors.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/ContactList/ContactListContainer.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","components/Notification/Notification.js","components/PhoneBook/PhoneBook.js","services/localStorage.js","components/PhoneBook/PhoneBookContainer.js","index.js"],"names":["module","exports","fetchContacts","createAction","Types","addContact","deleteContact","filterContacts","contactsReducer","createReducer","Actions","state","action","payload","filter","id","filterReducer","combineReducers","contacts","store","configureStore","reducer","phoneBookReducer","ContactForm","onFormSubmit","useState","name","setName","number","setNumber","onSubmit","e","preventDefault","className","styles","form","htmlFor","type","value","required","onChange","target","getContacts","getFilter","createSelector","toLowerCase","includes","ContactElement","contact","onDeleteContact","contactElement","contactContainer","onClick","deleteBtn","ContactList","TransitionGroup","component","map","CSSTransition","key","timeout","unmountOnExit","classNames","slideFromLeftTransition","ContactListItem","connect","dispatch","phonebookActions","Filter","onChangeFilter","Notification","message","notification","PhoneBook","onAddContact","setMessage","showMessage","setShowMessage","useEffect","contactsLS","JSON","parse","localStorage","getItem","Storage","setItem","stringify","in","slideFromRightTransition","appear","title","formData","contactToAdd","uuidv4","find","setTimeout","length","popTransition","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c7b5678.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideFromLeft_enter__21Onq\",\"appear\":\"slideFromLeft_appear__3o3vb\",\"enterActive\":\"slideFromLeft_enterActive__30QkW\",\"appearActive\":\"slideFromLeft_appearActive__1m6pz\",\"appearDone\":\"slideFromLeft_appearDone__LM5l2\",\"exit\":\"slideFromLeft_exit__2gKWv\",\"exitActive\":\"slideFromLeft_exitActive__3-VhI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"ContactListItem_deleteBtn__1Wwx4\",\"contactElement\":\"ContactListItem_contactElement__1_Kuc\",\"contactContainer\":\"ContactListItem_contactContainer__3NZ2i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3HAFE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1JtK7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PhoneBook_title__25YrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideFromRight_enter__8bgKM\",\"enterActive\":\"slideFromRight_enterActive__3ilW-\",\"exit\":\"slideFromRight_exit__KNvlp\",\"exitActive\":\"slideFromRight_exitActive__vj7DP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"contacts_enter__33vwp\",\"enterActive\":\"contacts_enterActive__21HIT\",\"exit\":\"contacts_exit__3sEH0\",\"exitActive\":\"contacts_exitActive__37nFk\"};","export default {\r\n  FETCH_CONTACTS: 'FETCH_CONTACTS',\r\n  ADD_CONTACT: 'ADD_CONTACT',\r\n  DELETE_CONTACT: 'DELETE_CONTACT',\r\n  FILTER_CONTACTS: 'FILTER_CONTACTS',\r\n};\r\n","// import Types from './phonebookActionTypes';\r\n\r\n// export const fetchContacts = (contacts) => ({\r\n//   type: Types.FETCH_CONTACTS,\r\n//   payload: contacts,\r\n// });\r\n\r\n// export const addContact = (contact) => ({\r\n//   type: Types.ADD_CONTACT,\r\n//   payload: contact,\r\n// });\r\n\r\n// export const deleteContact = (contact) => ({\r\n//   type: Types.DELETE_CONTACT,\r\n//   payload: contact,\r\n// });\r\n\r\n// export const filterContacts = (query) => ({\r\n//   type: Types.FILTER_CONTACTS,\r\n//   payload: query,\r\n// });\r\n\r\n// With redux-toolkit\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport Types from './phonebookActionTypes';\r\n\r\nexport const fetchContacts = createAction(Types.FETCH_CONTACTS);\r\nexport const addContact = createAction(Types.ADD_CONTACT);\r\nexport const deleteContact = createAction(Types.DELETE_CONTACT);\r\nexport const filterContacts = createAction(Types.FILTER_CONTACTS);\r\n","// import { combineReducers } from 'redux';\r\n// import Types from './phonebookActionTypes';\r\n\r\n// const contactsReducer = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case Types.FETCH_CONTACTS:\r\n//       return payload;\r\n//     case Types.ADD_CONTACT:\r\n//       return [...state, payload];\r\n//     case Types.DELETE_CONTACT:\r\n//       return state.filter(({ id }) => id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filterReducer = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case Types.FILTER_CONTACTS:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default combineReducers({\r\n//   contacts: contactsReducer,\r\n//   filter: filterReducer,\r\n// });\r\n\r\n// With redux-toolkit\r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as Actions from './phonebookActions';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [Actions.fetchContacts]: (state, action) => action.payload,\r\n  [Actions.addContact]: (state, action) => [...state, action.payload],\r\n  [Actions.deleteContact]: (state, action) =>\r\n    state.filter(({ id }) => id !== action.payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [Actions.filterContacts]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport phoneBookReducer from './phonebook/phonebookReducer';\r\n\r\nconst store = configureStore({ reducer: phoneBookReducer });\r\n\r\nexport default store;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nconst ContactForm = ({ onFormSubmit }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  function reset() {\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!name || !number) {\r\n      return;\r\n    }\r\n\r\n    onFormSubmit({ name, number });\r\n    reset();\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={`${styles.form} container shadow`}>\r\n      <label htmlFor=\"name\">\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          name=\"name\"\r\n          required\r\n          onChange={({ target }) => setName(target.value)}\r\n        />\r\n      </label>\r\n      <label htmlFor=\"number\">\r\n        Number\r\n        <input\r\n          name=\"number\"\r\n          required\r\n          value={number}\r\n          onChange={({ target }) => setNumber(target.value)}\r\n          // placeholder=\"Enter a phone number\"\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onFormSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const getContacts = (state) => state.contacts;\r\n\r\nexport const getFilter = (state) => state.filter;\r\n\r\n// Memoization\r\nexport const filterContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactElement = ({ contact, onDeleteContact }) => (\r\n  <div className={`${styles.contactElement} container shadow`}>\r\n    <div className={styles.contactContainer}>\r\n      <span>{contact.name}</span>\r\n      <span>{contact.number}</span>\r\n    </div>\r\n    <button\r\n      onClick={() => onDeleteContact(contact.id)}\r\n      className={styles.deleteBtn}\r\n      type=\"button\"\r\n    >\r\n      ✕\r\n    </button>\r\n  </div>\r\n);\r\n\r\nContactElement.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactElement;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport slideFromLeftTransition from '../../transitions/slideFromLeft.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <TransitionGroup component=\"ul\">\r\n    {contacts.map((contact) => (\r\n      <CSSTransition\r\n        key={contact.id}\r\n        timeout={200}\r\n        unmountOnExit\r\n        classNames={slideFromLeftTransition}\r\n      >\r\n        <li>\r\n          <ContactListItem contact={contact} onDeleteContact={onDeleteContact} />\r\n        </li>\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from 'react-redux';\r\nimport * as phonebookActions from '../../redux/phonebook/phonebookActions';\r\nimport { filterContacts } from '../../redux/phonebook/phonebookSelectors';\r\nimport ContactList from './ContactList';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: filterContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(phonebookActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <div className=\"container shadow\">\r\n    <p>Find contacts by name:</p>\r\n    <input\r\n      name=\"filter\"\r\n      value={value}\r\n      onChange={onChangeFilter}\r\n      // placeholder=\"Type here to search...\"\r\n    />\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { connect } from 'react-redux';\r\nimport * as phonebookActions from '../../redux/phonebook/phonebookActions';\r\nimport Filter from './Filter';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChangeFilter: (e) =>\r\n    dispatch(phonebookActions.filterContacts(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <div className={styles.notification}>{message}</div>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport * as Storage from '../../services/localStorage';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactListContainer';\r\nimport Filter from '../Filter/FilterContainer';\r\nimport Notification from '../Notification/Notification';\r\nimport styles from './PhoneBook.module.css';\r\nimport slideFromRightTransition from '../../transitions/slideFromRight.module.css';\r\nimport slideFromLeftTransition from '../../transitions/slideFromLeft.module.css';\r\nimport popTransition from '../../transitions/contacts.module.css';\r\nimport 'normalize.css';\r\n\r\nfunction PhoneBook({ contacts, filter, onAddContact, fetchContacts }) {\r\n  const [message, setMessage] = useState('');\r\n  const [showMessage, setShowMessage] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const contactsLS = Storage.getContactsFromLS();\r\n    if (contactsLS) {\r\n      fetchContacts(contactsLS);\r\n    }\r\n  }, [fetchContacts]);\r\n\r\n  useEffect(() => {\r\n    Storage.saveContactsToLS(contacts);\r\n  }, [contacts]);\r\n\r\n  const handleFormSubmit = (formData) => {\r\n    const contactToAdd = {\r\n      id: uuidv4(),\r\n      name: formData.name,\r\n      number: formData.number,\r\n    };\r\n\r\n    if (contacts.find((contact) => contact.name === contactToAdd.name)) {\r\n      setMessage('Contact already exists!');\r\n      setShowMessage(true);\r\n      setTimeout(() => {\r\n        setShowMessage(false);\r\n      }, 2000);\r\n      return;\r\n    }\r\n\r\n    onAddContact(contactToAdd);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <CSSTransition\r\n        in={showMessage}\r\n        timeout={200}\r\n        classNames={slideFromRightTransition}\r\n        unmountOnExit\r\n      >\r\n        <Notification message={message} />\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n        in\r\n        appear\r\n        timeout={500}\r\n        classNames={slideFromLeftTransition}\r\n      >\r\n        <h1 className={styles.title}>Phonebook</h1>\r\n      </CSSTransition>\r\n\r\n      <ContactForm onFormSubmit={handleFormSubmit} />\r\n      <CSSTransition\r\n        in={contacts.length > 1 || filter.length > 0}\r\n        timeout={200}\r\n        classNames={popTransition}\r\n        unmountOnExit\r\n      >\r\n        <Filter />\r\n      </CSSTransition>\r\n\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\nPhoneBook.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  onAddContact: PropTypes.func.isRequired,\r\n  fetchContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PhoneBook;\r\n","export function getContactsFromLS() {\r\n  try {\r\n    return JSON.parse(localStorage.getItem('contacts'));\r\n  } catch {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport function saveContactsToLS(contacts) {\r\n  return localStorage.setItem('contacts', JSON.stringify(contacts));\r\n}\r\n","import { connect } from 'react-redux';\r\nimport * as phonebookActions from '../../redux/phonebook/phonebookActions';\r\nimport PhoneBook from './PhoneBook';\r\nimport {\r\n  getContacts,\r\n  getFilter,\r\n} from '../../redux/phonebook/phonebookSelectors';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state),\r\n  filter: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContacts: (contacts) =>\r\n    dispatch(phonebookActions.fetchContacts(contacts)),\r\n\r\n  onAddContact: (contact) => dispatch(phonebookActions.addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBook);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport PhoneBook from './components/PhoneBook/PhoneBookContainer';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PhoneBook />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}